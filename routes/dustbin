
// Paystack Secret Key
const PAYSTACK_SECRET_KEY = process.env.PAYSTACK_SECRET_KEY;

// Route: Initiate Payment
router.post("/initiate-payment", async (req, res) => {
    const { amount, email } = req.body;

    if (!amount || !email) {
        return res.status(400).json({ success: false, message: "Amount and email are required." });
    }

    try {
        const paymentData = {
            amount,
            email,
            currency: "NGN",
            callback_url: "http://localhost:5173/verify-payment-page",
        };

        const response = await axios.post(
            "https://api.paystack.co/transaction/initialize",
            paymentData,
            {
                headers: {
                    Authorization: `Bearer ${PAYSTACK_SECRET_KEY}`,
                    "Content-Type": "application/json",
                },
            }
        );

        const paymentLink = response.data.data.authorization_url;

        return res.status(200).json({
            success: true,
            paymentLink,
        });
    } catch (error) {
        console.error("Error initiating payment:", error.response?.data || error.message);
        res.status(500).json({ success: false, message: "Failed to initiate payment." });
    }
});

// Route: Validate Account
router.post('/validate-account', setHeaders, async (req, res) => {
    const {
        bank_code,
        country_code,
        account_number,
        account_name,
        account_type,
        document_type,
        document_number
    } = req.body;

    if (!bank_code || !country_code || !account_number || !account_name || !account_type || !document_type || !document_number) {
        return res.status(400).json({ error: 'All fields are required' });
    }

    try {
        const response = await axios.post(
            `https://api.paystack.co/bank/validate`,
            {
                bank_code,
                country_code,
                account_number,
                account_name,
                account_type,
                document_type,
                document_number
            },
            { headers: req.headers }
        );

        res.json(response.data);
    } catch (error) {
        res.status(error.response?.status || 500).json({ error: error.response?.data || 'Server error' });
    }
});